{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/applications": {
            "get": {
                "description": "Get a paginated list of applications with optional keyword filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "List applications",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search keywords",
                        "name": "keywords",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.Application"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new application with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "model.Application"
                ],
                "summary": "Create application",
                "parameters": [
                    {
                        "description": "Application creation request",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Application"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/import": {
            "post": {
                "description": "Import applications from LDAP directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Import LDAP applications",
                "parameters": [
                    {
                        "description": "LDAP applications import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ImportLDAPApplicationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "description": "Get detailed information about a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Get application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing application's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Update application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Application update request",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Application"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an application by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Delete application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/issuer_keys": {
            "get": {
                "description": "Get all issuer keys for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "List application issuer keys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/util.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/model.ApplicationPrivateKey"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new issuer key for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Create application issuer key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create application issuer key request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateApplicationIssuerKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/gin.H"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        "issuer_key_id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/issuer_keys/{issuerKeyId}": {
            "delete": {
                "description": "Delete an issuer key for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Delete application issuer key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Issuer Key ID",
                        "name": "issuerKeyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/keys": {
            "get": {
                "description": "Get all keys for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "List application keys",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/util.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/model.ApplicationKey"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new key for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Create application key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/definitions/gin.H"
                                                },
                                                {
                                                    "type": "object",
                                                    "properties": {
                                                        " client_secret": {
                                                            "type": "string"
                                                        },
                                                        "client_id": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/keys/{keyId}": {
            "delete": {
                "description": "Delete a key for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Delete application key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Key ID",
                        "name": "keyId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/roles": {
            "get": {
                "description": "Get all roles for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "List application roles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/util.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/model.ApplicationRole"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new role for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Create application role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Role creation request",
                        "name": "role",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApplicationRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.ApplicationRole"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/roles/{roleId}": {
            "delete": {
                "description": "Delete a role for a specific application",
                "tags": [
                    "Applications"
                ],
                "summary": "Delete application role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Role ID",
                        "name": "roleId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/users": {
            "get": {
                "description": "Get all users for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "List application users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "allOf": [
                                    {
                                        "$ref": "#/definitions/util.Response"
                                    },
                                    {
                                        "type": "object",
                                        "properties": {
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/definitions/github_com_sven-victor_ez-auth_internal_model.User"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Assign a role to a user for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Assign user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Assign user role request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AssignUserRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}/users/{userId}": {
            "delete": {
                "description": "Unassign a role from a user for a specific application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Unassign user role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/echo": {
            "get": {
                "description": "Returns a simple OK message to test API connectivity",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Echo"
                ],
                "summary": "Test API connectivity",
                "responses": {
                    "200": {
                        "description": "Returns a simple OK message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ldap": {
            "get": {
                "description": "Registers all LDAP Settings endpoints",
                "tags": [
                    "LDAP"
                ],
                "summary": "Register LDAP routes",
                "responses": {}
            }
        },
        "/ldap/settings": {
            "get": {
                "description": "Retrieves the current LDAP configuration settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LDAP"
                ],
                "summary": "Get LDAP settings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.LDAPSettings"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates the LDAP configuration settings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LDAP"
                ],
                "summary": "Update LDAP settings",
                "parameters": [
                    {
                        "description": "LDAP settings",
                        "name": "settings",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LDAPSettingsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ldap/test": {
            "post": {
                "description": "Tests the LDAP connection with provided credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LDAP"
                ],
                "summary": "Test LDAP connection",
                "parameters": [
                    {
                        "description": "LDAP test request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LDAPTestRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth2/.well-known/jwks.json": {
            "get": {
                "description": "Retrieves the JSON Web Key Set for token validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OIDC"
                ],
                "summary": "Get JWKS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JWKS"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth2/.well-known/openid-configuration": {
            "get": {
                "description": "Retrieves the OpenID Connect configuration information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OIDC"
                ],
                "summary": "Get OpenID configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OpenIDConfiguration"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth2/authorize": {
            "get": {
                "description": "Handles OAuth2 authorization requests with client credentials grant type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OIDC"
                ],
                "summary": "Get OAuth2 authorization",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Redirect URI",
                        "name": "redirect_uri",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Response type (code)",
                        "name": "response_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Requested scope",
                        "name": "scope",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Code challenge",
                        "name": "code_challenge",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Code challenge method",
                        "name": "code_challenge_method",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "State",
                        "name": "state",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Nonce",
                        "name": "nonce",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirect to the redirect URI",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth2/token": {
            "post": {
                "description": "Handles OAuth2 token requests with client credentials grant type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OIDC"
                ],
                "summary": "Get OAuth2 token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Grant type (client_credentials)",
                        "name": "grant_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client ID",
                        "name": "client_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Client secret",
                        "name": "client_secret",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization code",
                        "name": "code",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Code verifier",
                        "name": "code_verifier",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Requested scope",
                        "name": "scope",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OIDCToken"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/oauth2/userinfo": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves user information for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OIDC"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OIDCUserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get a paginated list of users with optional filtering by username, email, and status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Current page number",
                        "name": "current",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/github_com_sven-victor_ez-console_pkg_model.User"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User creation request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_sven-victor_ez-console_pkg_model.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/import": {
            "post": {
                "description": "Import users from LDAP directory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Import LDAP users",
                "parameters": [
                    {
                        "description": "LDAP users import request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ImportLDAPUsersRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get detailed information about a specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_sven-victor_ez-console_pkg_model.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_sven-victor_ez-console_pkg_model.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}/reset-password": {
            "post": {
                "description": "Reset a user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Reset password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/util.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "allOf": [
                                                    {
                                                        "type": "string"
                                                    },
                                                    {
                                                        "type": "object",
                                                        "properties": {
                                                            "new_password": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AssignUserRoleRequest": {
            "type": "object",
            "properties": {
                "role_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "api.CreateApplicationIssuerKeyRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "private_key": {
                    "type": "string"
                }
            }
        },
        "api.CreateUserRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "ldap_attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPAttr"
                    }
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.ImportLDAPApplicationsRequest": {
            "type": "object",
            "properties": {
                "application_dn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ImportLDAPUsersRequest": {
            "type": "object",
            "properties": {
                "user_dn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.LDAPSettingsRequest": {
            "type": "object",
            "properties": {
                "application_base_dn": {
                    "type": "string"
                },
                "application_filter": {
                    "type": "string"
                },
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "type": "string"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "type": "string"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                }
            }
        },
        "api.LDAPTestRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "$ref": "#/definitions/safe.String"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "$ref": "#/definitions/safe.String"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.UpdateApplicationRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "description_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "display_name": {
                    "type": "string"
                },
                "display_name_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "grant_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "ldap_attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPAttr"
                    }
                },
                "name": {
                    "type": "string"
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "api.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "ldap_attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPAttr"
                    }
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "github_com_sven-victor_ez-auth_internal_model.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "ldap_attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPAttr"
                    }
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "source": {
                    "$ref": "#/definitions/model.UserSource"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "github_com_sven-victor_ez-console_pkg_model.User": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_login": {
                    "type": "string"
                },
                "ldap_dn": {
                    "type": "string"
                },
                "mfa_enabled": {
                    "type": "boolean"
                },
                "mfa_enforced": {
                    "type": "boolean"
                },
                "oauth_id": {
                    "type": "string"
                },
                "oauth_provider": {
                    "type": "string"
                },
                "password_changed_at": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Role"
                    }
                },
                "source": {
                    "$ref": "#/definitions/model.UserSource"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Application": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "description_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "display_name": {
                    "type": "string"
                },
                "display_name_i18n": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "grant_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ldap_attrs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LDAPAttr"
                    }
                },
                "ldap_dn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "redirect_uris": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ApplicationRole"
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "active, inactive",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_sven-victor_ez-auth_internal_model.User"
                    }
                }
            }
        },
        "model.ApplicationKey": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ApplicationPrivateKey": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "application_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "private_key": {
                    "$ref": "#/definitions/safe.String"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.ApplicationRole": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Condition": {
            "type": "object",
            "additionalProperties": true
        },
        "model.JWK": {
            "type": "object",
            "properties": {
                "alg": {
                    "type": "string"
                },
                "crv": {
                    "type": "string"
                },
                "e": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "n": {
                    "type": "string"
                },
                "use": {
                    "type": "string"
                },
                "x": {
                    "type": "string"
                },
                "y": {
                    "type": "string"
                }
            }
        },
        "model.JWKS": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.JWK"
                    }
                }
            }
        },
        "model.LDAPAttr": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "user_attr": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "model.LDAPSettings": {
            "type": "object",
            "properties": {
                "application_base_dn": {
                    "type": "string"
                },
                "application_filter": {
                    "type": "string"
                },
                "base_dn": {
                    "type": "string"
                },
                "bind_dn": {
                    "type": "string"
                },
                "bind_password": {
                    "$ref": "#/definitions/safe.String"
                },
                "ca_cert": {
                    "type": "string"
                },
                "client_cert": {
                    "type": "string"
                },
                "client_key": {
                    "$ref": "#/definitions/safe.String"
                },
                "default_role": {
                    "type": "string"
                },
                "display_name_attr": {
                    "type": "string"
                },
                "email_attr": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "insecure": {
                    "type": "boolean"
                },
                "server_url": {
                    "type": "string"
                },
                "start_tls": {
                    "type": "boolean"
                },
                "user_attr": {
                    "type": "string"
                },
                "user_filter": {
                    "type": "string"
                }
            }
        },
        "model.OIDCToken": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "expires_in": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "scope": {
                    "type": "string"
                },
                "token_type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.OIDCUserInfo": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "aud": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code_challenge": {
                    "type": "string"
                },
                "code_challenge_method": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer"
                },
                "iat": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nonce": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "preferred_username": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "role_id": {
                    "type": "string"
                },
                "sid": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                }
            }
        },
        "model.OpenIDConfiguration": {
            "type": "object",
            "properties": {
                "authorization_endpoint": {
                    "type": "string"
                },
                "claims_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "code_challenge_methods_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "grant_types_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id_token_signing_alg_values_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "introspection_endpoint": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "jwks_uri": {
                    "type": "string"
                },
                "response_types_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "revocation_endpoint": {
                    "type": "string"
                },
                "scopes_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject_types_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "token_endpoint": {
                    "type": "string"
                },
                "token_endpoint_auth_methods_supported": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "userinfo_endpoint": {
                    "type": "string"
                }
            }
        },
        "model.Permission": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.PolicyDocument": {
            "type": "object",
            "properties": {
                "Statement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StatementEntry"
                    }
                }
            }
        },
        "model.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Permission"
                    }
                },
                "policy_document": {
                    "description": "Permission configuration based on IAM-style policies, stored in JSON format",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.PolicyDocument"
                        }
                    ]
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.StatementEntry": {
            "type": "object",
            "properties": {
                "Action": {
                    "description": "List of actions, can contain wildcards \"*\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Condition": {
                    "description": "Conditions",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/model.Condition"
                    }
                },
                "Effect": {
                    "description": "\"Allow\" or \"Deny\"",
                    "type": "string"
                },
                "Resource": {
                    "description": "List of resources, can contain wildcards \"*\"",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.UserSource": {
            "type": "string",
            "enum": [
                "local",
                "ldap",
                "oauth"
            ],
            "x-enum-varnames": [
                "UserSourceLocal",
                "UserSourceLDAP",
                "UserSourceOAuth"
            ]
        },
        "safe.String": {
            "type": "object"
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "err": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "util.PaginationResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "current": {
                    "type": "integer"
                },
                "data": {},
                "err": {
                    "type": "string"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "util.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {},
                "err": {
                    "type": "string"
                }
            }
        }
    }
}